Highest average AUC was (0.76), lower than (0.81) in paper plos-one and than with ppi data (0.82) using previous code. The most likelly reason for that difference is the way in which AUC is computed. We should discuss the approach that I chose.
AUC using ppi data with current code was lower than for expression data (see "results.txt")

Some remarks:
Average AUC is higher when the proportion of GOs in the test set is small (20% vs 50%).
Including only (biological processes) GOs seems to improve the performance
In large networks, including in train GOs terms others than those with EES, seems to improve the performance; whereas in small networks, the opposites seems true (see results S2 and S3)
High threshold of minGOsize is often better (i.e. 25 vs 5)
When the number of conexions was 10973 (very small network), an AUC of 0.71 was achieved, although in that case only 3 GO terms were used to compute AUC. For networks of ~26000 conexions, an AUC of ~0.68 was achieved for a reasonable number of GOs.    

Conclussions:
Performance does not seem to be high enough how to obtain good results in smaller networks.
In the plots folder, it can be seen that GO terms whose lables have an average of 300 conexions in the network tend to have AUC>80%, although there are other factors involved. 


To investigate why some GO terms have lower AUC, I looked at the #conexions of their corresponding proteins in the network. 
For instance (in most experiments), we can find this type of values:
The average #conexions per label in GO terms with <80%AUC was 197.87 (labels in test), 187.53 (all labels) vs  290 and 331 in GOs >80%. (this is related to the plots).
In other experiment: 211.306 and 200.5778 vs 446.2463 and 360.516. In experiments with low minGOsize the difference is smaller.







